services:
  # Pulsar settings
#  pulsar-standalone:
#    image: apachepulsar/pulsar:2.7.0
#    environment:
#    - BOOKIE_MEM=" -Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g"
#    command: >
#      /bin/bash -c "bin/apply-config-from-env.py conf/standalone.conf && bin/pulsar standalone"
#    volumes:
#    - "pulsardata:/pulsar/data"
#    - "pulsarconf:/pulsar/conf"
#    ports:
#    - "6650:6650"
#    - "8080:8080"
#    - "8081:8081"

  # Redis storage for state persistence
  redis:
    image: redis:6.0-alpine
    ports:
    - "6379:6379"
    volumes:
    - "redisdata:/data"

  # Inspired by
  # https://grafana.com/grafana/dashboards/893
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    expose:
    - 9090
    ports:
    - 9090:9090
    links:
    - node-exporter:node-exporter
    - cadvisor:cadvisor

  cadvisor:
    image: google/cadvisor:latest
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    expose:
    - 8080

  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    expose:
    - 9100

  grafana:
    image: grafana/grafana:latest
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=pass
    volumes:
    - grafana_data:/var/lib/grafana
    depends_on:
    - prometheus
    ports:
    - "3000:3000"
volumes:
  pulsardata:
  pulsarconf:
  redisdata:
  grafana_data: